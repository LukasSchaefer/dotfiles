set-option -g default-shell /bin/zsh

# free the original prefix key
unbind C-b

# set Ctrl-a as prefix key and allow in other programs
set -g prefix C-a
bind C-a send-prefix

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# create new windows/panes in same directory
bind C new-window -c '#{pane_current_path}'

# split panes using \ and -
bind \\ split-window -h
bind - split-window -v

# split panes at current directory (| and _)
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload the configuration
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded.."

# Moving between panes.
# Use vim-tmux-navigator plugin if possible. (Ctrl+ h,j,k,l)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# # rename current session
# bind-key $ command-prompt -I #S "rename-session '%%'"

# mouse on
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down

# passthrough OSC52 clipboard copy
set -g allow-passthrough on

# Scroll History
set -g history-limit 50000

# Lower escape timing from 500ms to 5ms for quicker response to scroll-buffer access.
set -sg escape-time 1

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

# easy resizing of panes
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10

# monitor windows for activity
#setw -g monitor-activity on

# display pane numbers for longer
set -g display-panes-time 2000

# keybinding to clear history
bind C-k clear-history \; display-message "history cleared"

# toggle between two panes / windows
bind-key t last-window
bind-key T last-pane

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# tmux.nvim seamless navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# tmux.nvim seamless resizing
bind -n 'C-M-y' if-shell "$is_vim" 'send-keys C-M-y' 'resize-pane -L 4'
bind -n 'C-M-u' if-shell "$is_vim" 'send-keys C-M-u' 'resize-pane -D 2'
bind -n 'C-M-i' if-shell "$is_vim" 'send-keys C-M-i' 'resize-pane -U 2'
bind -n 'C-M-o' if-shell "$is_vim" 'send-keys C-M-o' 'resize-pane -R 4'

bind-key -T copy-mode-vi C-M-y resize-pane -L 4
bind-key -T copy-mode-vi C-M-u resize-pane -D 2
bind-key -T copy-mode-vi C-M-i resize-pane -U 2
bind-key -T copy-mode-vi C-M-o resize-pane -R 4

setw -g automatic-rename on
set-option -g allow-rename on

set -g status-justify left
set -g status-style bg=default,fg=white

# set status bar with utility info
set -g status-interval 2
set -g status-right '#[fg=green]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]'
set -g status-right-length 60

# minimal looks
# set -g status-justify centre
# set -g status-right ''
# set -g window-status-format '#[fg=white]#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
# set -g window-status-current-format '#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
# set -g window-status-current-style fg=green

# improve colors
set -g default-terminal 'screen-256color'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
